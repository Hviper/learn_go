计算属性（computed）：
非常强大：只要内部所依赖的属性（响应式的属性）一发生改变，整个计算属性重新计算
	1.定义：要用到的属性不存在，要通过已有的属性计算得来
	2.原理：底层借助Object.defineProperty方法提供的getter和setter
	3.备注：计算属性最终会出现在vm上，直接读取使用即可，如果计算属性要被修改，那必须写set方法响应修改
		且set中要引起计算时依赖的数据发生变化
	4.执行时候：get内部什么时候调用？1.初次读取fullName时，2.所依赖的数据发生变化时！！	
	computed:{
		fullName:{
			//当有人读取fullName时，get就会被调用，且返回值作为fullName的值（代理）
			//get内部什么时候调用？1.初次读取fullName时，2.所依赖的数据发生变化时
			//当所依赖的值改变的时候，vue实例内部会监听并出现调用get方法！
			get(){
				return xx
			},
			//当计算属性计算出来的值最终存储在vm实例中，当之后操作会被修改的情况下，
			//可以加这个方法，比如vm.fullName = "修改"，就会触发set函数
			set(newvalue){

			}
		}
	}